schema {
  query: StocksQuery
}

type StocksQuery {
  indexes("Returns the elements in the list that come after the specified cursor." after: String "Returns the first _n_ elements from the list." first: Int "Returns the last _n_ elements from the list." last: Int "Returns the elements in the list that come before the specified cursor." before: String): IndexesConnection
}

"A connection to a list of items."
type IndexesConnection {
  "Information to aid in pagination."
  pageInfo: PageInfo!
  "A list of edges."
  edges: [IndexesEdge!]
  "A flattened list of the nodes."
  nodes: [StockIndexModel]
}

"Information about pagination in a connection."
type PageInfo {
  "Indicates whether more edges exist following the set defined by the clients arguments."
  hasNextPage: Boolean!
  "Indicates whether more edges exist prior the set defined by the clients arguments."
  hasPreviousPage: Boolean!
  "When paginating backwards, the cursor to continue."
  startCursor: String
  "When paginating forwards, the cursor to continue."
  endCursor: String
}

type StockIndexModel {
  indexName: String
  last: Decimal!
  hight: Decimal!
  time: DateTime!
}

"An edge in a connection."
type IndexesEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: StockIndexModel
}

"The built-in `Decimal` scalar type."
scalar Decimal

"The `DateTime` scalar represents an ISO-8601 compliant date time type."
scalar DateTime